1 . Find the Day with the Highest Sales
Problem: Given a `Sales` table
with columns `SaleAmount` and `SaleDate`,
find the day with the highest total sales.

>>>SELECT SaleDate, SUM( SaleAmount) AS TotalSaleAmount FROM Sales GROUP BY SaleDate ORDER BY TotalSaleAmount DESC;

2 .Find Customers with Multiple Orders
Problem: Given a `Customers` table and an `Orders` table
where `Orders` contains a `CustomerID`,
find customers who have placed more than one order.

Table Structure:
```
CREATE TABLE Customers (
CustomerID INT,
Name VARCHAR(100)
);

CREATE TABLE Orders (
OrderID INT,
CustomerID INT,
OrderDate DATE
);

>>>SELECT c.CustomerID, c.Name FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID, c.Name
HAVING COUNT(o.OrderID) > 1;


3.  Find the Most Recent Order for Each Customer
Problem: Given an `Orders` table
with columns `OrderID`, `CustomerID`, and `OrderDate`,
find the most recent order date for each customer.

Table Structure:
```
CREATE TABLE Orders (
OrderID INT,
CustomerID INT,
OrderDate DATE
);

>>>SELECT CustomerId,Max(OrderDate) AS RecentOrder FROM Orders  GROUP BY CustomerID;

4.  Find the Second Highest Salary
Problem: Given an `Employees` table
with columns `EmployeeID`, `Name`, and `Salary`,
find the second highest salary.

>>>SELECT MAX(Salary) AS SLargestSalary FROM Employees WHERE Salary < (SELECT MAX(Salary) FROM Employees);


5. Find the Top N Salespersons by Sales
Problem:
Given a table `Sales`
with columns `SalesPersonID`, `SaleAmount`, and `SaleDate`,
find the top 3 salespersons by total sales amount.

Table Structure:
```
CREATE TABLE Sales (
SalesPersonID INT,
SaleAmount DECIMAL(10, 2),
SaleDate DATE
);

>>>SELECT SalesPersonID,SUM(SaleAmount) AS TotalSalesAmount FROM Sales GROUP BY SalesPersonID ORDER BY TotalSalesAmount DESC;

