1.class DoctorPrescription
{
    public int DoctorId { get; set; }
    public string PatientName { get; set; }
    public string Medication { get; set; }
    public double Dosage { get; set; }

    static void Main()
    {
        DoctorPrescription[] doctorPrescriptions = new DoctorPrescription[4];
        for (int i = 0; i < doctorPrescriptions.Length; i++)
        {
            Console.Write("Enter Doctor id: ");
            int docId = int.Parse(Console.ReadLine());
            Console.Write("Enter Patient Name: ");
            string patientName = Console.ReadLine();
            Console.Write("Enter Medication: ");
            string Medication = Console.ReadLine();
            Console.Write("Enter Dosage: ");
            double Dosage = double.Parse(Console.ReadLine());

            doctorPrescriptions[i] = new DoctorPrescription { DoctorId = docId, PatientName = patientName, Medication = Medication, Dosage = Dosage };
        }
        for(int i = 0;i < doctorPrescriptions.Length - 1; i++)
        {
            int minIndex = i;
            for(int j = i +1; j < doctorPrescriptions.Length; j++)
            {
                if (doctorPrescriptions[j].Dosage < doctorPrescriptions[minIndex].Dosage)
                {
                     minIndex = j;
                }
            }
            DoctorPrescription temp = doctorPrescriptions[minIndex];
            doctorPrescriptions[minIndex] = doctorPrescriptions[i];
            doctorPrescriptions[i] = temp;
        }
            Console.WriteLine($"The Minimum Dosage is:{doctorPrescriptions[0].Dosage}mg by Doctor {doctorPrescriptions[0].DoctorId}");
           Console.WriteLine($"The Third Maximum Dosage is : {doctorPrescriptions[(doctorPrescriptions.Length-1) - 2].Dosage}mg");
        for (int i = 0; i < doctorPrescriptions.Length - 1; i++)
        {
            int minIndex = i;
            for (int j = i + 1; j < doctorPrescriptions.Length; j++)
            {
                if (string.Compare(doctorPrescriptions[j].PatientName, doctorPrescriptions[minIndex].PatientName) < 0)
                {
                    minIndex = j;
                }
            }
            DoctorPrescription temp = doctorPrescriptions[minIndex];
            doctorPrescriptions[minIndex] = doctorPrescriptions[i];
            doctorPrescriptions[i] = temp;
        }

        Console.WriteLine("Prescriptions sorted by patient name:");
        foreach (var prescription in doctorPrescriptions)
        {
            Console.WriteLine($"{prescription.PatientName} - {prescription.Medication} - {prescription.Dosage}mg");
        }

        Console.ReadKey();
    }
  
        

}
=========================================================================================================================================================================================
2. public class CareProvider
{
    public int ProviderID { get; set; }
    public string ProviderName { get; set; }

    public virtual void ProvideCare()
    {
        Console.WriteLine("Care provided by " + ProviderName);
    }
}


public interface IEmergencyResponder
{
    void RespondToEmergency();
}


public class Nurse : CareProvider, IEmergencyResponder
{
    public string ShiftTiming { get; set; }

    public override void ProvideCare()
    {
        Console.WriteLine("Care provided by " + ProviderName + " during " + ShiftTiming);
    }

    public void RespondToEmergency()
    {
        Console.WriteLine("Nurse " + ProviderName + " is responding to the emergency situation.");
    }
}


public class Doctor : CareProvider, IEmergencyResponder
{
    public string Specialization { get; set; }

    public override void ProvideCare()
    {
        Console.WriteLine("Care provided by " + ProviderName + " in " + Specialization);
    }

    public void RespondToEmergency()
    {
        Console.WriteLine("Doctor " + ProviderName + " is responding to the critical emergency situation in " + Specialization);
    }
}

class Program
{
    static void Main(string[] args)
    {
        IEmergencyResponder[] careProviders = new IEmergencyResponder[3]; 


        for (int i = 0; i < 3; i++)
        {
            Console.Write("Enter provider type (Nurse/Doctor): ");
            string type = Console.ReadLine();
            Console.Write("Enter provider ID: ");
            int id = Convert.ToInt32(Console.ReadLine());
            Console.Write("Enter provider name: ");
            string name = Console.ReadLine();

            if (type == "Nurse")
            {
                Console.Write("Enter shift timing: ");
                string shiftTiming = Console.ReadLine();
                careProviders[i] = new Nurse { ProviderID = id, ProviderName = name, ShiftTiming = shiftTiming };
            }
            else if (type == "Doctor")
            {
                Console.Write("Enter specialization: ");
                string specialization = Console.ReadLine();
                careProviders[i] = new Doctor { ProviderID = id, ProviderName = name, Specialization = specialization };
            }
        }


        Console.WriteLine("Emergency Response:");
        foreach (var provider in careProviders)
        {
            provider.RespondToEmergency();
        }

   
        Console.WriteLine("Care Providing:");
        foreach (var provider in careProviders)
        {
            ((CareProvider)provider).ProvideCare();
        }

        Console.ReadKey();
    }
}



